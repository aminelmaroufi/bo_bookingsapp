# image: node:latest

# before_script:
#   - apt-get update -qy
#   - apt-get install -y ruby-dev
#   - gem install dpl

# stages:
#   - production

# production:
#   stage: production
#   image: ruby:latest
#   script:
#     - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
#   only:
#     - production

default:
  image: node:latest

variables:
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  CYPRESS_VIDEO_FOLDER: "$CI_PROJECT_DIR/videos"
  CYPRESS_baseUrl: "http://localhost:3000"

stages:
  - build
  - test
  # - deploy

# build_app:
#   stage: build
#   only:
#     - master
#   image: node:18-alpine
#   script:
#     - npm ci --prefer-offline
#     - CI=false npm run build
#     - echo "Build successfully!"
#   artifacts:
#     paths:
#       - build

unit-tests:
  image: node:latest
  stage: test
  only:
    - master
  before_script:
    - npm install
  script:
    - npm run test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xml

e2e_tests:
  only:
    - master
  stage: test
  image: cypress/browsers:node12.14.1-chrome85-ff81
  script:
    - npm ci --prefer-offline
    - npm install -g serve
    - npm i wait-on
    # - CI=false npm run build
    # - npm start &
    - serve -s build &
    # - $(npm bin)/wait-on http://localhost:3000
    - wait-on http://localhost:3000
    - npm run e2e
  artifacts:
    when: always
    paths:
      - test-results.xml
      - cypress/screenshots
    reports:
      junit: test-results.xml
# deploy_production:
#   stage: deploy
#   only:
#     - production
#   script:
#     - npm install --global vercel
#     - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
#     - vercel build --prod --token=$VERCEL_TOKEN
#     - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
